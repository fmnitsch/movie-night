{"version":3,"sources":["OMDB.js","Ranking.js","Components/SearchBar/SearchBar.js","Components/Results/Results.js","Components/Picks/Picks.js","Components/Home/Home.js","Components/TopRanked/Refresh.svg","Components/TopRanked/TopRanked.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","apiKey","OMDB","getMovies","searchTerm","fetch","response","ok","json","jsonResponse","Error","Search","alert","getFilmById","id","Ranking","getMovieIdList","submitNominations","entry","fetchOptions","method","headers","body","JSON","stringify","movie","SearchBar","props","className","type","placeholder","results","onChange","e","updateSearchTerm","search","target","value","Results","nominateMovie","button","document","getElementById","nominations","some","imdbID","resultsmovieCard","querySelector","classList","add","setTimeout","remove","nominationAnimation","style","opacity","useEffect","buttons","querySelectorAll","resultsHeader","forEach","checkNomination","searchResults","length","visibility","map","src","Poster","alt","Title","Year","onClick","Nominations","unNominateMovie","nominationMovieCard","unNominationAnimation","instructions","completionBanner","display","to","submit","Home","state","setState","term","a","movieToNominate","tempArr","push","UnNominatedMovie","filter","nominatedMovie","key","this","localStorage","setItem","previousState","i","parse","getItem","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","React","Component","TopRanked","useState","movies","setMovies","rankData","array","rawResults","Array","index","hasOwnProperty","total","Object","entries","sort","b","rankMovies","movieList","idList","rankings","getMoviePosters","movieObjects","getMovie","movieObject","loading","Refresh","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f4aba8af.chunk.js","sourcesContent":["const baseUrl = \"https://www.omdbapi.com/?apikey=\";\nconst apiKey = \"1f00160f\";\n\nconst OMDB = {\n  async getMovies(searchTerm) {\n    try {\n      const response = await fetch(\n        `${baseUrl}${apiKey}&s=${searchTerm}&type=movie`\n      );\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        if (jsonResponse.Error) {\n          return false;\n        } else {\n          return jsonResponse.Search;\n        }\n      }\n    } catch (error) {\n      return alert(error);\n    }\n  },\n\n  async getFilmById(id) {\n    try {\n      const response = await fetch(`${baseUrl}${apiKey}&i=${id}`);\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        if (jsonResponse.Error) {\n          return false;\n        } else {\n          return jsonResponse;\n        }\n      }\n    } catch (error) {\n      return alert(error);\n    }\n  },\n};\n\nexport default OMDB;\n","const baseUrl = \"https://movies-db-api-fmn.herokuapp.com/api/movies\";\n\nconst Ranking = {\n  async getMovieIdList() {\n    try {\n      const response = await fetch(baseUrl);\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        if (jsonResponse) {\n          return jsonResponse;\n        }\n      }\n    } catch (error) {\n      alert(error);\n    }\n  },\n\n  async submitNominations(entry) {\n    const fetchOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ movie: entry }),\n    };\n    try {\n      const response = await fetch(baseUrl, fetchOptions);\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        if (jsonResponse) {\n        }\n      }\n    } catch (error) {\n      alert(error);\n    }\n  },\n};\n\nexport default Ranking;\n","import \"./SearchBar.css\";\n\nfunction SearchBar(props) {\n  const updateSearchTerm = (e) => {\n    props.updateSearchTerm(e);\n    props.search(e.target.value);\n  };\n\n  return (\n    <div className=\"search-bar\">\n      <p className=\"input-instructions\">Start typing a movie title</p>\n      <input\n        className=\"input\"\n        type=\"search\"\n        placeholder=\"Search\"\n        results=\"0\"\n        onChange={updateSearchTerm}\n      ></input>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import { useEffect } from \"react\";\nimport \"./Results.css\";\n\nfunction Results(props) {\n  const checkNomination = (button) => {\n    if (props.nominations.some((movie) => movie.imdbID === button.id)) {\n      button.style.opacity = \"50%\";\n    } else {\n      button.style.opacity = \"100%\";\n    }\n  };\n\n  const nominationAnimation = (id) => {\n    const resultsmovieCard = document.querySelector(`.${id}`);\n\n    resultsmovieCard.classList.add(\"onClick\");\n    setTimeout(() => {\n      resultsmovieCard.classList.remove(\"onClick\");\n    }, 500);\n  };\n\n  const nominateMovie = (e) => {\n    const button = document.getElementById(e.target.id);\n    if (props.nominations.some((movie) => movie.imdbID === e.target.id)) {\n      return;\n    } else {\n      nominationAnimation(e.target.id);\n      props.nominateMovie(e.target.id);\n      button.style.opacity = \"50%\";\n    }\n  };\n\n  useEffect(() => {\n    const buttons = document.querySelectorAll(\".nominate\");\n    const resultsHeader = document.querySelector(\".results-header\");\n\n    buttons.forEach((button) => checkNomination(button));\n\n    props.searchResults.length > 0\n      ? (resultsHeader.style.visibility = \"visible\")\n      : (resultsHeader.style.visibility = \"hidden\");\n\n    if (props.nominations.length === 5) {\n      buttons.forEach((button) => (button.style.opacity = \"50%\"));\n    }\n  });\n\n  return (\n    <div className=\"results-container\">\n      <h3 className=\"results-header\">Results for \"{props.searchTerm}\"</h3>\n      <div className=\"movie-list-container\">\n        {props.searchResults.map((movie) => {\n          return (\n            <div className={`movie-card ${movie.imdbID}`} key={movie.imdbID}>\n              <div className=\"movie\">\n                <img className=\"movie-poster\" src={movie.Poster} alt=\"\"></img>\n                <div className=\"movie-title-container\">\n                  <p className=\"movie-title\">\n                    {movie.Title} <span className=\"year\">({movie.Year})</span>\n                  </p>\n                </div>\n              </div>\n              <button\n                className=\"nominate\"\n                id={movie.imdbID}\n                onClick={nominateMovie}\n              >\n                Pick\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n","import { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Picks.css\";\n\nfunction Nominations(props) {\n  const unNominationAnimation = (id) => {\n    const nominationMovieCard = document.getElementById(`nominated ${id}`);\n\n    nominationMovieCard.classList.add(\"onClick\");\n    setTimeout(() => {\n      nominationMovieCard.classList.remove(\"onClick\");\n    }, 300);\n  };\n\n  const unNominateMovie = (e) => {\n    unNominationAnimation(e.target.id);\n    setTimeout(() => {\n      props.unNominateMovie(e.target.id);\n    }, 90);\n  };\n\n  useEffect(() => {\n    const instructions = document.querySelector(\".nominations-instructions\");\n    const completionBanner = document.querySelector(\".completion-banner\");\n\n    props.nominations.length > 0\n      ? (instructions.style.display = \"none\")\n      : (instructions.style.display = \"block\");\n\n    if (props.nominations.length === 5) {\n      completionBanner.style.display = \"block\";\n    } else {\n      completionBanner.style.display = \"none\";\n    }\n  });\n\n  return (\n    <div className=\"nominations-container\">\n      <h2 className=\"nominations-header\">\n        Your Picks ({props.nominations.length}/5)\n      </h2>\n      <div className=\"movie-list-container\">\n        <p className=\"nominations-instructions\">\n          Your picks will appear here as you select them from the search\n          results.\n        </p>\n\n        {props.nominations.map((movie) => {\n          return (\n            <div\n              className={`movie-card nominated ${movie.imdbID}`}\n              id={`nominated ${movie.imdbID}`}\n              key={movie.imdbID}\n            >\n              <div className=\"movie\">\n                <img className=\"movie-poster\" src={movie.Poster} alt=\"\"></img>\n                <div className=\"movie-title-container\">\n                  <p className=\"movie-title\">\n                    {movie.Title} <span className=\"year\">({movie.Year})</span>\n                  </p>\n                </div>\n              </div>\n              <button\n                className=\"un-nominate\"\n                id={movie.imdbID}\n                onClick={unNominateMovie}\n              >\n                Remove\n              </button>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"completion-banner\">\n        <p>\n          Thanks for picking your 5 movies! Help others choose what to watch by\n          submitting your picks below\n        </p>\n        <div className=\"button-wrapper\">\n          <Link to=\"/movie-night/top-ranked\">\n            <button className=\"submit-nominations\" onClick={props.submit}>\n              Submit Picks\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Nominations;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\nimport OMDB from \"../../OMDB\";\nimport Ranking from \"../../Ranking\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Results from \"../Results/Results\";\nimport Picks from \"../Picks/Picks\";\n\nclass Home extends React.Component {\n  state = {\n    searchTerm: \"\",\n    searchResults: [],\n    nominations: [],\n  };\n\n  saveStateToLocalStorage() {\n    for (let key in this.state) {\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  componentDidMount() {\n    let previousState = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      let key = localStorage.key(i);\n      previousState.push(JSON.parse(localStorage.getItem(key)));\n    }\n\n    this.setState({\n      nominations: previousState[1],\n    });\n\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n    this.saveStateToLocalStorage();\n  }\n\n  updateSearchTerm = (e) => {\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  search = async (term) => {\n    const results = await OMDB.getMovies(term);\n    if (term.length === 0) {\n      this.setState({ searchResults: [] });\n    } else if (results === false) {\n      return;\n    } else {\n      this.setState({ searchResults: results });\n    }\n  };\n\n  nominateMovie = async (id) => {\n    const movieToNominate = await OMDB.getFilmById(id);\n    let tempArr = this.state.nominations;\n    if (this.state.nominations.length >= 5) {\n      return;\n    } else {\n      tempArr.push(movieToNominate);\n      this.setState({ nominations: tempArr });\n    }\n  };\n\n  unNominateMovie = async (id) => {\n    const UnNominatedMovie = await OMDB.getFilmById(id);\n    let tempArr = this.state.nominations.filter((nominatedMovie) => {\n      return nominatedMovie.imdbID !== UnNominatedMovie.imdbID;\n    });\n    this.setState({ nominations: tempArr });\n  };\n\n  submit = () => {\n    this.state.nominations.forEach((entry) => {\n      const movie = {\n        id: entry.imdbID,\n      };\n\n      Ranking.submitNominations(movie);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"welcome-section\">\n          <h1>Movie Night!</h1>\n          <p>\n            Pick out the top 5 movies on your must-watch list and never lose\n            track of them!\n          </p>\n          <p>\n            Need some ideas?&nbsp;&nbsp;\n            <Link to=\"/movie-night/top-ranked\">\n              See what others are watching\n            </Link>\n          </p>\n          <SearchBar\n            search={this.search}\n            searchTerm={this.state.searchTerm}\n            updateSearchTerm={this.updateSearchTerm}\n          />\n          <Results\n            searchTerm={this.state.searchTerm}\n            searchResults={this.state.searchResults}\n            nominateMovie={this.nominateMovie}\n            nominations={this.state.nominations}\n          />\n        </div>\n        <Picks\n          nominations={this.state.nominations}\n          unNominateMovie={this.unNominateMovie}\n          submit={this.submit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/Refresh.5b87ce0e.svg\";","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./TopRanked.css\";\nimport OMDB from \"../../OMDB\";\nimport Ranking from \"../../Ranking\";\nimport Refresh from \"./Refresh.svg\";\n\nfunction TopRanked(props) {\n  const [movies, setMovies] = useState([]);\n\n  const rankData = (array) => {\n    let rawResults = {};\n\n    if (array instanceof Array) {\n      array.forEach((value, index) => {\n        if (!rawResults[value]) {\n          rawResults[value] = [index];\n        } else {\n          rawResults[value].push(index);\n        }\n      });\n    }\n\n    for (let key in rawResults) {\n      if (rawResults.hasOwnProperty(key)) {\n        const total = rawResults[key].length;\n        rawResults[key] = total;\n      }\n    }\n\n    const totalledResults = Object.entries(rawResults);\n\n    const rankedInOrder = totalledResults.sort((a, b) => {\n      return b[1] - a[1];\n    });\n\n    return rankedInOrder;\n  };\n\n  const rankMovies = async () => {\n    const movieList = await Ranking.getMovieIdList();\n    const idList = [];\n    movieList.movies.forEach((entry) => {\n      for (const key in entry) {\n        idList.push(entry[key]);\n      }\n    });\n    const rankings = rankData(idList);\n    return rankings;\n  };\n\n  const getMoviePosters = async () => {\n    const rankings = await rankMovies();\n    const movieObjects = [];\n    const getMovie = async (id) => {\n      const movie = await OMDB.getFilmById(id);\n      return movie;\n    };\n\n    for (let i = 0; i < 5; i++) {\n      const movieObject = await getMovie(rankings[i][0]);\n      movieObjects.push(movieObject);\n    }\n    setMovies(movieObjects);\n  };\n\n  useEffect(() => {\n    getMoviePosters();\n    const loading = document.querySelector(\".loading-container\");\n    if (!document.querySelector(\".movie-container-large\")) {\n      loading.style.display = \"flex\";\n    } else {\n      loading.style.display = \"none\";\n    }\n    return () => {};\n  });\n\n  return (\n    <div className=\"top-ranked\">\n      <h1>Here's what people are watching</h1>\n      <h2>\n        These are the top 5 movies according to our users. Wanna watch one?\n      </h2>\n      <Link to=\"/movie-night\">\n        <p>Back to search</p>\n      </Link>\n      <div className=\"top-5-container\">\n        <div className=\"loading-container\">\n          <p className=\"loading-text\">Loading...</p>\n          <img className=\"loading-spinner\" src={Refresh} alt=\"\"></img>\n        </div>\n        {movies.map((movie) => {\n          return (\n            <div key={movie.imdbID} className=\"movie-container-large\">\n              <img\n                className=\"movie-poster-large\"\n                src={movie.Poster}\n                alt={`poster for ${movie.Title} (${movie.Year})`}\n              ></img>\n              <h3>{movie.Title}</h3>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default TopRanked;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Components/Home/Home\";\nimport TopRanked from \"./Components/TopRanked/TopRanked\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/movie-night\" exact component={Home} />\n          <Route path=\"/movie-night/top-ranked\" component={TopRanked} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}